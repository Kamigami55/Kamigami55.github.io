{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2016-02-16-100sites-006-snack/","result":{"data":{"markdownRemark":{"id":"a7bbf56b-d3f4-5f51-b884-f786885dd635","html":"<h1 id=\"snack---貪食蛇，吃掉那些點點吧！\" style=\"position:relative;\"><a href=\"#snack---%E8%B2%AA%E9%A3%9F%E8%9B%87%EF%BC%8C%E5%90%83%E6%8E%89%E9%82%A3%E4%BA%9B%E9%BB%9E%E9%BB%9E%E5%90%A7%EF%BC%81\" aria-label=\"snack   貪食蛇，吃掉那些點點吧！ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Snack - 貪食蛇，吃掉那些點點吧！</h1>\n<p><a href=\"https://github.com/Kamigami55/100sites/tree/gh-pages/006_Snack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a></p>\n<p><a href=\"http://kamigami55.github.io/100sites/006_Snack/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Live Demo</a></p>\n<!-- more -->\n<p><img src=\"https://i.imgur.com/BfDXbAU.jpg\" alt=\"螢幕快照 2016-02-16 下午8.39.27.png\"></p>\n<p>今天比較有閒有空，把之前一直想做的貪食蛇遊戲做出來了，使用Processing.js。</p>\n<p>規則如同經典的貪食蛇，目標是不斷的吃點點，讓自己越長越長，但如果撞到自己就輸了。</p>\n<p>使用方向鍵來移動，Enter鍵來開始/暫停。</p>\n<p>我正在努力學習如何組織自己的程式碼和適當地下註解，非常歡迎指教。</p>\n<p>今天的code：</p>\n<div class=\"gatsby-highlight\" data-language=\"htmlindex.html\"><pre class=\"language-htmlindex.html\"><code class=\"language-htmlindex.html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Snack&lt;/title&gt;\n  &lt;script src=&quot;http://cdn.bootcss.com/processing.js/1.4.16/processing.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Be a Snack!&lt;/h1&gt;\n  &lt;p&gt;Move - Arrow key.&lt;/p&gt;\n  &lt;p&gt;Start/Pause - Enter(Return)&lt;/p&gt;\n  &lt;canvas id=&quot;game&quot; data-processing-sources=&quot;snack.pde&quot;&gt;&lt;/canvas&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascriptsnack.pde\"><pre class=\"language-javascriptsnack.pde\"><code class=\"language-javascriptsnack.pde\">/* @pjs globalKeyEvents=&quot;true&quot;; */\n\nint NUM_OF_PILES = 26; // how many piles per dimension\nint PILE_SIZE = 18; // unit: px\nint SPEED = 12; // frame rate\nint DEFAULT_SNACK_LENGTH = 4; \nint DIRECTION_UP = 1; // direction of the snack (1:up 2:down 3:left 4:right)\nint DIRECTION_DOWN = 2;\nint DIRECTION_LEFT = 3;\nint DIRECTION_RIGHT = 4;\nint DEFAULT_SNACK_DIRECTION = DIRECTION_UP; \n\nint direction = DEFAULT_SNACK_DIRECTION; // direction of snack\nArrayList snack = new ArrayList();\nFood food = new Food(0, 0); // the only food on the board\nboolean isPausing = true; // whether the game is pausing\n\n\nvoid setup() {\n  size(NUM_OF_PILES * PILE_SIZE, NUM_OF_PILES * PILE_SIZE);\n  ellipseMode(CORNER);\n  frameRate(SPEED);\n  \n  resetSnack();\n  food.resetPosition();\n  \n  noLoop(); // the default state of the game is pausing\n  isPausing = true;\n}\n\n\nvoid resetSnack() {\n  // clear snack arrarList\n  for(int i = 0; i &lt; snack.size(); ++i) {\n    snack.remove(0);\n  }\n  direction = DEFAULT_SNACK_DIRECTION; // set direction to default (up)\n\n  // set the snack at the center of the board with default snack length\n  // +i is to set the tail of snack to the south(+Y)\n  for(int i = 0; i &lt; DEFAULT_SNACK_LENGTH; ++i) {\n    snack.add(new SnackUnit(NUM_OF_PILES/2, NUM_OF_PILES/2+i));\n  }\n}\n\n\n\nvoid draw() {\n  background(50);\n  for(int i = 0; i &lt; snack.size(); ++i) {\n    snack.get(i).display();\n  }\n  food.display();\n\n  snackMove();\n  checkFood();\n  checkLose();\n}\n\n\nvoid snackMove() {\n  int vx = 0; // velocity of the snack at x axis (-1, 0, 1)\n  int vy = 0; // velocity of the snack at x axis (-1, 0, 1)\n   // set velocities according to the direction\n  switch(direction) {\n    case DIRECTION_UP:\n      vy = -1;\n      break;\n    case DIRECTION_DOWN:\n      vy = 1;\n      break;\n    case DIRECTION_LEFT:\n      vx = -1;\n      break;\n    case DIRECTION_RIGHT:\n      vx = 1;\n      break;\n    default:\n      break;\n  }\n   // move snack body forward\n  for(int i = snack.size()-1; i &gt; 0; --i) {\n    snack.get(i).xpos = snack.get(i-1).xpos;\n    snack.get(i).ypos = snack.get(i-1).ypos;\n  }\n   // move snack head forward according to the velocities\n  snack.get(0).xpos += vx;\n  snack.get(0).ypos += vy;\n\n   // if the snack is in the wall, make it appear on the other side\n  if(snack.get(0).xpos &lt; 0)\n    snack.get(0).xpos = NUM_OF_PILES-1;\n  else if(snack.get(0).xpos &gt; NUM_OF_PILES-1)\n    snack.get(0).xpos = 0;\n  else if(snack.get(0).ypos &lt; 0)\n    snack.get(0).ypos = NUM_OF_PILES-1;\n  else if(snack.get(0).ypos &gt; NUM_OF_PILES-1)\n    snack.get(0).ypos = 0;\n}\n\n\nvoid checkFood() {\n  if(snack.get(0).isOn(food.xpos, food.ypos)) {\n     // append a new snack body at the tail\n    snack.add(new SnackUnit(snack.get(snack.size()-1).xpos, snack.get(snack.size()-1).ypos));\n    food.resetPosition();\n  }\n}\n\n\nvoid checkLose() {\n   // if the snack hit itself\n  for(int i = 1; i &lt; snack.size(); ++i) {\n    if(snack.get(0).isOn(snack.get(i).xpos, snack.get(i).ypos)) {\n       // the player lose, pause the game\n      isPausing = true;\n      noLoop();\n    }\n  }\n}\n\n\nvoid keyPressed() {\n  switch(keyCode) {\n     // pressing arrow key to change the direction\n    case UP:\n      direction = DIRECTION_UP;\n      break;\n    case DOWN:\n      direction = DIRECTION_DOWN;\n      break;\n    case LEFT:\n      direction = DIRECTION_LEFT;\n      break;\n    case RIGHT:\n      direction = DIRECTION_RIGHT;\n      break;\n     // pressing ENTER and RETURN to toggle Pausing state\n    case ENTER:\n    case RETURN:\n      if(isPausing) {\n        isPausing = false;\n        loop();\n      } else {\n        isPausing = true;\n        noLoop();\n      }\n      break;\n    default:\n      break;\n  }\n}\n\n\nclass SnackUnit {\n  int xpos, ypos;\n\n  SnackUnit(int x, int y) {\n    xpos = x;\n    ypos = y;\n  }\n  void display() {\n    fill(255);\n    rect(xpos*PILE_SIZE, ypos*PILE_SIZE, PILE_SIZE, PILE_SIZE);\n  }\n  boolean isOn(int x, int y) {\n    return xpos == x &amp;&amp; ypos == y;\n  }\n}\n\n\nclass Food {\n  int xpos, ypos;\n\n  Food(int x, int y) {\n    xpos = x;\n    ypos = y;\n  }\n  void display() {\n    fill(255);\n     // the size of the food is 4px smaller than a pile\n    ellipse(xpos*PILE_SIZE+2, ypos*PILE_SIZE+2, PILE_SIZE-4, PILE_SIZE-4);\n  }\n  void resetPosition() {\n    xpos = int(random(0, NUM_OF_PILES));\n    ypos = int(random(0, NUM_OF_PILES));\n    for(int i = 0; i &lt; snack.size(); ++i) {\n      if(snack.get(i).isOn(xpos, ypos)) { // if the snack is already on the position of the new food\n        resetPosition(); // reset food position to another place\n      }\n    }\n  }\n}</code></pre></div>","fields":{"slug":"/posts/2016-02-16-100sites-006-snack/","tagSlugs":["/tag/100-sites/","/tag/project/","/tag/web/","/tag/processingjs/","/tag/processing/","/tag/game/"]},"frontmatter":{"date":"2016-02-16 12:41","description":"","tags":["100sites","Project","Web","Processingjs","Processing","Game"],"title":"【100sites #006】Snack","socialImage":"https://i.imgur.com/BfDXbAU.jpg"}}},"pageContext":{"slug":"/posts/2016-02-16-100sites-006-snack/"}},"staticQueryHashes":["251939775","401334301","825871152"]}