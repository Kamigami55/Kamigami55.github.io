{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2016-03-25-100sites-010-piano/","result":{"data":{"markdownRemark":{"id":"6406ba88-8b32-567f-b3ce-9a695fae61c7","html":"<h1 id=\"piano，用p5js的sound函式庫實作虛擬鋼琴\" style=\"position:relative;\"><a href=\"#piano%EF%BC%8C%E7%94%A8p5js%E7%9A%84sound%E5%87%BD%E5%BC%8F%E5%BA%AB%E5%AF%A6%E4%BD%9C%E8%99%9B%E6%93%AC%E9%8B%BC%E7%90%B4\" aria-label=\"piano，用p5js的sound函式庫實作虛擬鋼琴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Piano，用P5js的sound函式庫實作虛擬鋼琴</h1>\n<p><a href=\"http://kamigami55.github.io/100sites/010_Piano/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">點我玩線上Demo</a></p>\n<p><a href=\"https://github.com/Kamigami55/100sites/tree/gh-pages/010_Piano\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">點我查看程式碼</a></p>\n<!-- more -->\n<p><img src=\"https://i.imgur.com/8aBbIhk.jpg\" alt=\"螢幕快照 2016-03-26 上午1.18.01.png\"></p>\n<p>要營造出好氣氛，一定要有適合的音樂，於是今天我想要玩音樂，所以就研究了一下<a href=\"http://p5js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">P5.js</a>的<a href=\"http://p5js.org/reference/#/libraries/p5.sound\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sound</a>函式庫，做出了今天的Piano虛擬鋼琴。</p>\n<p>這個函式庫有不少功能可以使用，播音錄音波型轉換都可以做到，今天的Piano使用了sine函數的oscillator製造聲音，再用FFT.analyze()來顯示波形。</p>\n<p>本次的程式碼：</p>\n<div class=\"gatsby-highlight\" data-language=\"htmlindex.html\"><pre class=\"language-htmlindex.html\"><code class=\"language-htmlindex.html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta charset-&quot;UTF-8&quot;&gt;\n  &lt;title&gt;Piano&lt;/title&gt;\n  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;\n  &lt;script src=&quot;http://cdnjs.cloudflare.com/ajax/libs/p5.js/0.4.23/p5.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;p5.sound.min.js&quot;&gt;&lt;/script&gt;\n  &lt;script src=&quot;piano.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cssstyle.css\"><pre class=\"language-cssstyle.css\"><code class=\"language-cssstyle.css\">* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  overflow: hidden;\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascriptpiano.js\"><pre class=\"language-javascriptpiano.js\"><code class=\"language-javascriptpiano.js\">var attackLevel = 2.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar susPercent = 0.2;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\nvar notePressed = [false, false, false, false, false, false, false, false, false, false, false, false];\nvar fft;\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n\n  textAlign(CENTER);\n  textSize(40);\n\n  env = new p5.Env();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator(&#39;sine&#39;);\n  triOsc.amp(env);\n  triOsc.start();\n\n  ellipseMode(CENTER);\n  strokeWeight(2);\n  rectMode(CENTER);\n  \n  fft = new p5.FFT();\n}\n\n\nfunction draw() {\n  background(200);\n\n  // title\n  fill(255);  \n  strokeWeight(5);\n  textSize(120);\n  textFont(&quot;Georgia&quot;);\n  text(&quot;PIANO&quot;, width/2, 150);\n  textFont(&quot;Normal&quot;);\n\n  // spectrum \n  var spectrum = fft.analyze(); \n  noStroke();\n  fill(230); \n  for (var i = 0; i&lt; spectrum.length; i++){\n    var x = map(i, 0, spectrum.length, 0, width/2);\n    var h = -height/2 + map(spectrum[i], 0, 255, height/2, 0);\n    rect(x, height/2, width / spectrum.length, h);\n    rect(width-x, height/2, width / spectrum.length, h);\n  }\n\n  // black note\n  drawNote(windowWidth/2-150, windowHeight/2-60, &#39;E&#39;, &#39;b&#39;, notePressed[0]);\n  drawNote(windowWidth/2-90, windowHeight/2-60, &#39;R&#39;, &#39;b&#39;, notePressed[1]);\n  drawNote(windowWidth/2+30, windowHeight/2-60, &#39;Y&#39;, &#39;b&#39;, notePressed[2]);\n  drawNote(windowWidth/2+90, windowHeight/2-60, &#39;U&#39;, &#39;b&#39;, notePressed[3]);\n  drawNote(windowWidth/2+150, windowHeight/2-60, &#39;I&#39;, &#39;b&#39;, notePressed[4]);\n  \n  // white note\n  drawNote(windowWidth/2-180, windowHeight/2, &#39;S&#39;, &#39;w&#39;, notePressed[5]);\n  drawNote(windowWidth/2-120, windowHeight/2, &#39;D&#39;, &#39;w&#39;, notePressed[6]);\n  drawNote(windowWidth/2-60, windowHeight/2, &#39;F&#39;, &#39;w&#39;, notePressed[7]);\n  drawNote(windowWidth/2, windowHeight/2, &#39;G&#39;, &#39;w&#39;, notePressed[8]);\n  drawNote(windowWidth/2+60, windowHeight/2, &#39;H&#39;, &#39;w&#39;, notePressed[9]);\n  drawNote(windowWidth/2+120, windowHeight/2, &#39;J&#39;, &#39;w&#39;, notePressed[10]);\n  drawNote(windowWidth/2+180, windowHeight/2, &#39;K&#39;, &#39;w&#39;, notePressed[11]);\n}\n\n\nfunction playEnv(f){\n  triOsc.freq(f);\n  env.play();\n}\n\n\nfunction drawNote(xpos, ypos, key, color, pressed) {\n  // black note\n  var big = 0;\n  if (pressed) {\n    big = 8;\n  }\n  // shadow\n  fill(100);\n  strokeWeight(0);\n  ellipse(xpos+3, ypos+3, 50+big, 50+big);\n  // note\n  if (color == &#39;b&#39;) {\n    fill(0);\n    stroke(255);  \n  } else {\n    fill(255);\n    stroke(0);  \n  }\n  strokeWeight(2);\n  ellipse(xpos, ypos, 50+big, 50+big);\n  // text\n  if (color == &#39;b&#39;) {\n    fill(255);  \n  } else {\n    fill(0);\n  }\n  textSize(40);\n  if (pressed) {\n    textSize(44);\n  }\n  text(key, xpos, ypos+17);\n}\n\n\nfunction keyPressed() {\n  switch (keyCode) {\n  case 83: // S\n  case 115: // s\n    playEnv(261); // C note\n    notePressed[5] = true;\n    break;\n  case 69: // E\n  case 101: // e\n    playEnv(277); // C# note\n    notePressed[0] = true;\n    break;\n  case 68: // D\n  case 110: // d\n    playEnv(293); // D note\n    notePressed[6] = true;\n    break;\n  case 82: // R\n  case 114: // r\n    playEnv(311); // D# note\n    notePressed[1] = true;\n    break;\n  case 70: // F\n  case 102: // f\n    playEnv(329); // E note\n    notePressed[7] = true;\n    break;\n  case 71: // G\n  case 103: // g\n    playEnv(349); // F note\n    notePressed[8] = true;\n    break;\n  case 89: // Y\n  case 121: // y\n    playEnv(369); // F# note\n    notePressed[2] = true;\n    break;\n  case 72: // H\n  case 104: // h\n    playEnv(392); // G note\n    notePressed[9] = true;\n    break;\n  case 85: // U\n  case 117: // u\n    playEnv(415); // G# note\n    notePressed[3] = true;\n    break;\n  case 74: // J\n  case 106: // j\n    playEnv(440); // A note\n    notePressed[10] = true;\n    break;\n  case 73: // U\n  case 105: // u\n    playEnv(466); // A# note\n    notePressed[4] = true;\n    break;\n  case 75: // K\n  case 107: // k\n    playEnv(493); // B note\n    notePressed[11] = true;\n    break;\n  default:\n    break;\n  }\n}\n\nfunction keyReleased() {\n  switch (keyCode) {\n  case 83: // S\n  case 115: // s\n    // C note\n    notePressed[5] = false;\n    break;\n  case 69: // E\n  case 101: // e\n    // C# note\n    notePressed[0] = false;\n    break;\n  case 68: // D\n  case 110: // d\n    // D note\n    notePressed[6] = false;\n    break;\n  case 82: // R\n  case 114: // r\n    // D# note\n    notePressed[1] = false;\n    break;\n  case 70: // F\n  case 102: // f\n    // E note\n    notePressed[7] = false;\n    break;\n  case 71: // G\n  case 103: // g\n    // F note\n    notePressed[8] = false;\n    break;\n  case 89: // Y\n  case 121: // y\n    // F# note\n    notePressed[2] = false;\n    break;\n  case 72: // H\n  case 104: // h\n    // G note\n    notePressed[9] = false;\n    break;\n  case 85: // U\n  case 117: // u\n    // G# note\n    notePressed[3] = false;\n    break;\n  case 74: // J\n  case 106: // j\n    // A note\n    notePressed[10] = false;\n    break;\n  case 73: // U\n  case 105: // u\n    // A# note\n    notePressed[4] = false;\n    break;\n  case 75: // K\n  case 107: // k\n    // B note\n    notePressed[11] = false;\n    break;\n  default:\n    break;\n  }\n}</code></pre></div>","fields":{"slug":"/posts/2016-03-25-100sites-010-piano/","tagSlugs":["/tag/p-5-js/","/tag/100-sites/","/tag/project/","/tag/web/"]},"frontmatter":{"date":"2016-03-25 17:57","description":"","tags":["P5js","100sites","Project","Web"],"title":"【100sites #010】Piano，用P5js的sound函式庫實作虛擬鋼琴","socialImage":"https://i.imgur.com/8aBbIhk.jpg"}}},"pageContext":{"slug":"/posts/2016-03-25-100sites-010-piano/"}},"staticQueryHashes":["251939775","401334301","825871152"]}